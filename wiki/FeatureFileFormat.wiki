#summary The format in which features are stored

= XML file =
Here is an example of an xml file for 1 image, which holds all features: 
http://ppis-deviantart.googlecode.com/files/_The_Morning__by_Red_Priest_Usada.jpg.xml

It is generated by a toolkit for matlab: http://www.mathworks.com/matlabcentral/fileexchange/4278. The current feature extraction code is under "Downloads" cause I couldn't get it onto svn. 

The main file is extractFeatures.m, which loops over the images in the image directory, parses the corresponding xml file, and then checks for each given feature whether it still needs to be calculated.   

At the start of the file, features.calculate is a cell array that contains the names of all the features that need to be calculated, and features.recompute contains names of features that should be calculated, even if they are already present in the xml file (which is a subset of the features in features.calculate):

{{{ 
features.calculate = {'edgeRatios','HSV','numFaces','cornerRatio'};
features.recompute = {'HSV'};
}}}

The different feature calculations are called from the %%%%%%% CALL FEATURE CALCULATIONS %%%%%%% section of the code (+- line 32). Here you can plug in new features as follows:

{{{
% feature name
feature = 'numFaces';
% checks whether the feature is set to be calculated AND whether it is not already in the XML, or set to be recomputed.
if (sum(ismember(features.calculate,feature)) > 0) && ((~featInStruct(feature,xmlFeatures)) || sum(ismember(features.recompute,feature)) > 0)
     % calculate feature
     numFaces = detectFaces(image);
     % add/update the feature in the struct (struct is parsed from the xml file)            
     xmlFeatures.features.numFaces.data = numFaces;
     % set the xmlUpdated flag to true, otherwise the xml doesn't have to be saved.
     xmlUpdated = true;
end
}}}

=For classification=
You can just load the xml files with the toolkit using imageStruct = xml_load('imagefilename.xml'). imageStruct is then a struct with the fields 'filename' and 'features' (unless no features have been calculated for that image, then it contains only 'filename'). 'features' is again a struct with all the feature names as fiels ('medianHSV','totalEdgeRatio' ..). Each of these features is again a struct with 'data' as field, which contains the actual data. data can contain just single values or arrays. imageStruct may get some more fields later (like date that feature was computed or something).


That's it. Let me know if you have questions or think something is wrong. 