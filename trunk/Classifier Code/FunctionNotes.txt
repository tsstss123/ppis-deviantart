Matlab Functions:

ClassifyDataset: 
	Input
	- Dataset in PRTools format
	- TrainingPercentage
	- What Classifiers to be used
	Output
	- Printed Scores of the Classifiers
	
ClassifyImage(Old Function needs Replacement by PRTools function):
	Input
	- What kind of Classifier to be used
	- The trained Classifier
	- Path of the Image
	Output
	- The class the Image belongs to
	
computeSimilarity(Old Function needs Replacement by PRTools function):
	Input
	- Artist Name
	Output
	- Ranking in Numbers
	- Ranking in Names
	
createDataset:
	Input
	- Featuresnames
	Output
	- Featuredataset combined by using the featurenames
	- Imagenames in a seperate Cellvector
	- Featurenames that were inputted
	
euclidianDistance:
	Input
	- Vector 1
	- Vector 2
	Output
	- Euclidian Distance

NearestNeighbour(Might not be needed because it is also set in ClassifyDataset.m):
	Input
	- Training Percentage
	- Number of Neighbours
	Output
	- Error Result of the classifier
	
pseudoFeature:
	Input
	- Path to the input image
	Output
	- hsv feature vector for the image

pseudoFeatureperArtist:
	Input
	- Directory path which contains images
	Output
	- .txt file containing the hsv feature vectors for every image in the directory
	
pseudotrainClassifier:
	Input
	- Directory path containing images
	Output
	- A matrix containing the hsv feature vectors of all the image in the directory
	
readfeaturefile:
	Input
	- path to feature file containing imagename, class, features
	Output
	- cell vector containing all imagenames
	- cell vector containig all classes associated with imagenames
	- matrix containing features
	
splitData(not needed anymore done in ClassifyDataset.m):
	Input
	- Featurevector Dataset
	- Training percentage
	Output
	- Splits the dataset into training and test set
	
SVM(Also done with PRTools so this function might not be used):
	Input
	- trainingpercentage
	Output
	- Either a classperf object or the svmstruct depending on the input value.