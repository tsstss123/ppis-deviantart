function [ numberranking, nameranking ] = computeSimilarity( givenartist )

% Read in the given artist name
givenpath = strcat('Feature Dataset\', givenartist, '.txt');
[~, ~, givenvalues] = readfeaturefile(givenpath);

% Choose your features(currently only hsv)
files = dir('Feature Dataset');
fileIndex = find(~[files.isdir]);

fprintf('Comparing all users to %s\n', givenartist);

% 
givenmatrixsize = size(givenvalues);
averagefeaturevector = sum(givenvalues) / givenmatrixsize(1);

similarityvector = zeros(length(fileIndex),1) - 1;
classvector = cell(length(fileIndex),1);

for k=1:length(fileIndex)
   fileName = files(fileIndex(k)).name;
   path = strcat(featurename, '\', fileName);
   [~, class, values] = readfeaturefile(path);
   sizeofvalues = size(values);
   averagevalues = sum(values) / sizeofvalues;

   classvector{k} = class{1};

   %Euclidian distance
   t=averagevalues-averagefeaturevector;
   t_2 = t.*t;
   similarityvector(k) = sqrt(sum(t_2));
end
[numberranking, indeces] = sortrows(similarityvector); 
nameranking = classvector(indeces);

